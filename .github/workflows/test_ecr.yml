name: master
on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Test scenario tags'
        required: true

env:
  AWS_REGION: ap-northeast-2 # aws 리전
  ECR_REPOSITORY: spring_app_repo
  ECS_SERVICE: $(date,
  ECS_CLUSTER: test-b
  ECR_IMAGE_TAG: latest
#  ECR_ACCOUNT_ID:
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: step start
        run: echo "${{inputs.tags}}"
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#
#      - name: Grant execute permission for root gradlew
#        run: chmod +x ./gradlew
#
#      - name: Build with Gradle
#        run: ./gradlew build
#
#      - name: create main boot jar
#        run: ./gradlew bootJar -p $MODULE_ROOT_PATH
#
#      - name: Copy Jar
#        run: cp $MODULE_JAR deploy.jar
#
#      - name: AWS configure credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region:  ${{env.AWS_REGION}}
#
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2
#
#      - name: Build, tag, and push image to Amazon ECR
#        id: build-image
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          # Build a docker container and
#          # push it to ECR so that it can
#          # be deployed to ECS.
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG
#          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG" >> $GITHUB_OUTPUT
#
#      - name: Fill in the new image ID in the Amazon ECS task definition
#        id: task-def
#        uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
#        with:
#          task-definition: ${{ env.ECS_TASK_DEFINITION }}
#          container-name: ${{ env.CONTAINER_NAME }}
#          image: ${{ steps.build-image.outputs.image }}
#
#      - name: Deploy Amazon ECS task definition
#        uses: aws-actions/amazon-ecs-deploy-task-definition@de0132cf8cdedb79975c6d42b77eb7ea193cf28e
#        with:
#          task-definition: ${{ steps.task-def.outputs.task-definition }}
#          service: ${{ env.ECS_SERVICE }}
#          cluster: ${{ env.ECS_CLUSTER }}
#          wait-for-service-stability: true